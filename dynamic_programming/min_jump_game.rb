class Solution
  # @param a : array of integers
  # @return an integer
  def jump(a)
    queue = []
    queue.push([0, a[0]])
    i = 1
    max_range = a[0]
    while(queue.length != 0 and i < a.length)
      temp = queue[0]
      return temp[0] + 1 if a.length - 1 <= temp[1]
      if temp[1] > i
        puts("#{queue} #{a.length} #{temp} #{max_range} #{i} #{a[i]}")
        if max_range < i + a[i]
          # return temp[0] + 1 if i + a[i] >= a.length - 1
          queue.pop if queue[-1][0] == temp[0] + 1
          queue.push([temp[0] + 1, i + a[i]])
          max_range = i + a[i]
        end
        i += 1
      else
        queue.delete_at(0)
      end
    end
    -1
  end
end

A = [ 15, 23, 13, 20, 16, 2, 4, 45, 24, 28, 0, 37, 23, 24, 27, 0, 31, 0, 0, 0, 2, 28, 0, 20, 44, 43, 22, 27, 45, 11, 31, 21, 0, 8, 0, 33, 17, 24, 47, 0, 43, 21, 22, 23, 23, 11, 0, 8, 23, 5, 27, 10, 40, 37, 0, 13, 0, 14, 47, 3, 25, 16, 0, 6, 5, 0, 45, 23, 2, 34, 20, 43, 30, 24, 48, 0, 4, 28, 19, 42, 0, 41, 13, 25, 39, 1, 43, 13, 33, 27, 29, 47, 2, 44, 5, 33, 42, 20, 34, 1, 30, 28, 37, 0, 0, 0, 28, 39, 10, 49, 0, 11, 0, 24, 0, 21, 36, 29, 26, 21, 0, 0, 27, 5, 41, 22, 34, 0, 0, 7, 38, 49, 3, 39, 0, 44, 25, 22, 21, 0, 2, 3, 8, 0, 0, 41, 49, 28, 21, 0, 9, 12, 12, 15, 20, 0, 35, 31, 10, 0, 0, 10, 12, 48, 0, 8, 16, 1, 9, 0, 32, 49, 39, 39, 28, 0, 30, 4, 0, 6, 27, 29, 12, 25, 17, 0, 0, 19, 21, 31, 0, 0, 46, 0, 11, 0, 9, 17, 0, 14, 9, 41, 31, 40, 0, 0, 23, 41, 50, 17, 0, 0, 32, 4, 38, 5, 27, 19, 45, 9, 26, 37, 35, 24, 10, 5, 13, 4, 40, 12, 25, 10, 2, 12, 13, 0, 10, 14, 1, 49, 5, 1, 49, 46, 0, 14, 45, 0, 1, 46, 46, 27, 0, 9, 23, 19, 0, 0, 0, 0, 46, 18, 41, 0, 12, 22, 28, 49, 15, 0, 49, 35, 34, 0, 43, 0, 0, 0, 0, 6, 30, 29, 0, 25, 18, 0, 1, 2, 14, 0, 42, 27, 26, 27, 2, 50, 21, 48, 10, 27, 24, 0, 34, 0, 0 ]
# [[0, 15], [1, 23], [24, 44], [52, 40], [91, 47], [131, 49], [171, 49], [218, 45], [260, 46]]
# A = [ 33, 21, 50, 0, 0, 46, 34, 3, 0, 12, 33, 0, 31, 37, 15, 17, 34, 18, 0, 4, 12, 41, 18, 35, 37, 34, 0, 47, 0, 39, 32, 49, 5, 41, 46, 26, 0, 2, 49, 35, 4, 19, 2, 27, 23, 49, 19, 38, 0, 33, 47, 1, 21, 36, 18, 33, 0, 1, 0, 39, 0, 22, 0, 9, 36, 45, 31, 4, 14, 48, 2, 33, 0, 39, 0, 37, 48, 44, 0, 11, 24, 16, 10, 23, 22, 41, 32, 14, 22, 16, 23, 38, 42, 16, 15, 0, 39, 23, 0, 42, 15, 25, 0, 41, 2, 48, 28 ]
# [[0, 33], [27, 47], [65, 45]]
puts(Solution.new.jump(A))

# [2,2,2,1,4]
# [[1,3], [1, 4], [2,4]]
# [0,1,1,2,0]